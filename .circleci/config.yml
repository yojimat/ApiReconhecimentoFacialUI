# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  ApiReconhecimentoFacialBuild:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.9

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/apiReconhecimentoFacial

    environment:
      TZ: "America/Sao_Paulo"
    branches:
      only:
        - master
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Build da Interface
          command: |
            echo "npm installing"

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      # run build
      - run: CI=true npm run build
  testApiRF:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.9
    working_directory: ~/apiReconhecimentoFacial
    environment:
      TZ: "America/Sao_Paulo"
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
        name: Teste da Interface
        command: |
          echo "Testando"            
          npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-test-{{ checksum "package.json" }}

      #run tests
      - run: npm test

workflows:
  version: 2

  build_e_teste:
    jobs:
      - testApiRF
      - ApiReconhecimentoFacialBuild:
        requires: -testApiRF
